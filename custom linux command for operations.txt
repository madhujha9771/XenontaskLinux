# internsctl - Custom Linux command for operations
# Version: v0.1.0

# Function to display help message
display_help() {
    echo "Usage: internsctl <command>"
    echo
    echo "Commands:"
    echo "  cpu getinfo         Get CPU information (similar to lscpu)"
    echo "  memory getinfo      Get memory information (similar to free)"
    echo "  user create <username>    Create a new user"
    echo "  user list           List all regular users"
    echo "  user list --sudo-only    List users with sudo permissions"
    echo "  file getinfo <file-name> [options]   Get information about a file"
}

# Function to display version
display_version() {
    echo "internsctl v0.1.0"
}

# Function to get CPU information
get_cpu_info() {
    lscpu
}

# Function to get memory information
get_memory_info() {
    free
}

# Function to create a new user
create_user() {
    if [ -z "$1" ]; then
        echo "Error: Please provide a username."
        exit 1
    fi

    sudo useradd -m "$1"
    sudo passwd "$1"
    echo "User '$1' created successfully."
}

# Function to list users
list_users() {
    if [ "$1" == "--sudo-only" ]; then
        getent group sudo | cut -d: -f4
    else
        cut -d: -f1 /etc/passwd
    fi
}

# Function to get file information
get_file_info() {
    local file_name="$1"
    
    if [ ! -e "$file_name" ]; then
        echo "Error: File '$file_name' not found."
        exit 1
    fi
    
    local size_option=false
    local permissions_option=false
    local owner_option=false
    local last_modified_option=false

    # Parse options
    while [ "$#" -gt 0 ]; do
        case "$1" in
            -s|--size)
                size_option=true
                ;;
            -p|--permissions)
                permissions_option=true
                ;;
            -o|--owner)
                owner_option=true
                ;;
            -m|--last-modified)
                last_modified_option=true
                ;;
            *)
                echo "Error: Unknown option '$1'"
                exit 1
                ;;
        esac
        shift
    done

    # Display file information
    echo "File: $file_name"

    if [ "$size_option" = true ]; then
        echo "Size(B): $(stat -c %s "$file_name")"
    fi

    if [ "$permissions_option" = true ]; then
        echo "Access: $(stat -c %A "$file_name")"
    fi

    if [ "$owner_option" = true ]; then
        echo "Owner: $(stat -c %U "$file_name")"
    fi

    if [ "$last_modified_option" = true ]; then
        echo "Modify: $(stat -c %y "$file_name")"
    fi
}

# Main script logic
case "$1" in
    "cpu")
        case "$2" in
            "getinfo")
                get_cpu_info
                ;;
            *)
                display_help
                ;;
        esac
        ;;
    "memory")
        case "$2" in
            "getinfo")
                get_memory_info
                ;;
            *)
                display_help
                ;;
        esac
        ;;
    "user")
        case "$2" in
            "create")
                create_user "$3"
                ;;
            "list")
                list_users "$3"
                ;;
            *)
                display_help
                ;;
        esac
        ;;
    "file")
        case "$2" in
            "getinfo")
                shift 2
                get_file_info "$@"
                ;;
            *)
                display_help
                ;;
        esac
        ;;
    "--help")
        display_help
        ;;
    "--version")
        display_version
        ;;
    *)
        display_help
        ;;
esac